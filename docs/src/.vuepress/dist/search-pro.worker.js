const nt="ENTRIES",V="KEYS",T="VALUES",F="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===F)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==F).join("")}value(){return E(this._path).node.get(F)}result(){switch(this._type){case T:return this.value();case V:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],ot=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const l of e.keys())if(l===F){const a=o[d-1];a<=s&&n.set(r,[e.get(l),a])}else{let a=u;for(let h=0;h<l.length;++h,++a){const m=l[h],p=i*a,f=p-i;let c=o[p];const g=Math.max(0,a-s-1),_=Math.min(i-1,a+s);for(let y=g;y<_;++y){const b=m!==t[y],z=o[f+y]+ +b,A=o[f+y+1]+1,w=o[p+y]+1,L=o[p+y+1]=Math.min(z,A,w);L<c&&(c=L)}if(c>s)continue t}R(e.get(l),t,s,n,o,a,i,r+l)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==F&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ut(this._tree,t)}entries(){return new D(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ot(this._tree,t,s)}get(t){const s=I(this._tree,t);return s!==void 0?s.get(F):void 0}has(t){const s=I(this._tree,t);return s!==void 0&&s.has(F)}keys(){return new D(this,V)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,M(this._tree,t).set(F,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);return n.set(F,s(n.get(F))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);let o=n.get(F);return o===void 0&&n.set(F,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==F&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},I=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==F&&t.startsWith(s))return I(e.get(s),t.slice(s.length))},M=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==F&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const l=new Map;l.set(u.slice(r),d),e.set(t.slice(n,n+r),l),e.delete(u),e=l}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ut=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(F),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;$(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==F&&$(e.slice(0,-1),n,o)}},$=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],it=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},rt=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,S="or",q="and",ct="and_not",lt=(e,t)=>{e.includes(t)||e.push(t)},P=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},G=({score:e},{score:t})=>t-e,ht=()=>new Map,k=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},N=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,dt={[S]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),P(n.terms,u)}}return e},[q]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);P(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[ct]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},at=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},ft=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},gt=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,ht),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},pt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(rt),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:S,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},Ft={combineWith:q,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},yt={..._t,...U},Y=(e,t=S)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(dt[s])||new Map},B=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const l of Object.keys(u)){const a=u[l],h=e._fieldIds[l],m=o.get(h);if(m==null)continue;let p=m.size;const f=e._avgFieldLength[h];for(const c of m.keys()){if(!e._documentIds.has(c)){gt(e,h,c,s),p-=1;continue}const g=i?i(e._documentIds.get(c),s,e._storedFields.get(c)):1;if(!g)continue;const _=m.get(c),y=e._fieldLength.get(c)[h],b=at(_,p,e._documentCount,y,f,r),z=n*a*g*b,A=d.get(c);if(A){A.score+=z,lt(A.terms,t);const w=N(A.match,s);w?w.push(l):A.match[s]=[l]}else d.set(c,{score:z,terms:[t],match:{[s]:[l]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((c,g)=>({...c,[g]:N(n.boost,g)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:l,prefix:a}={...J.weights,...i},h=e._index.get(t.term),m=B(e,t.term,t.term,1,h,o,u,d);let p,f;if(t.prefix&&(p=e._index.atPrefix(t.term)),t.fuzzy){const c=t.fuzzy===!0?.2:t.fuzzy,g=c<1?Math.min(r,Math.round(t.term.length*c)):c;g&&(f=e._index.fuzzyGet(t.term,g))}if(p)for(const[c,g]of p){const _=c.length-t.term.length;if(!_)continue;f?.delete(c);const y=a*c.length/(c.length+.3*_);B(e,t.term,c,y,g,o,u,d,m)}if(f)for(const c of f.keys()){const[g,_]=f.get(c);if(!_)continue;const y=l*c.length/(c.length+_);B(e,t.term,c,y,g,o,u,d,m)}return m},X=(e,t,s={})=>{if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(m=>X(e,m,a));return Y(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,l=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(ft(i)).map(a=>At(e,a,i));return Y(l,i.combineWith)},K=(e,t,s={})=>{const n=X(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const l=r.length,a={id:e._documentIds.get(u),score:i*l,terms:Object.keys(d),match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return o.sort(G),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of K(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(G),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...pt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...Ft,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:l},a)=>{if(l!==1&&l!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=k(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=k(u),h._avgFieldLength=i,h._storedFields=k(r),h._dirtCount=d||0,h._index=new C;for(const[m,p]of h._documentIds)h._idToShortId.set(p,m);for(const[m,p]of e){const f=new Map;for(const c of Object.keys(p)){let g=p[c];l===1&&(g=g.ds),f.set(parseInt(c,10),k(g))}h._index.set(m,f)}return h},Q=Object.entries,wt=Object.fromEntries,j=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(l,a=!1)=>{let h="";i===0?h=l.length>20?`… ${l.slice(-20)}`:l:a?h=l.length+i>100?`${l.slice(0,100-i)}… `:l:h=l.length>20?`${l.slice(0,20)} … ${l.slice(-20)}`:l,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const l=d+n.length;if(r(e.slice(u,d)),u=l,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},Z=/[\u4e00-\u9fa5]/g,tt=(e={})=>({fuzzy:.2,prefix:!0,processTerm:t=>{const s=t.match(Z)||[],n=t.replace(Z,"").toLowerCase();return n?[n,...s]:[...s]},...e}),xt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),kt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),et=(e,t,s={})=>{const n={};return K(t,e,tt({boost:{h:2,t:1,c:4},...s})).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),l=u.includes("#"),[a,h]=u.split(/[#@]/),m=i.sort((f,c)=>f.length-c.length).filter((f,c)=>i.slice(c+1).every(g=>!g.includes(f))),{contents:p}=n[a]??={title:"",contents:[]};if(d)p.push([{type:"customField",key:a,index:h,display:m.map(f=>o.c.map(c=>j(c,f))).flat().filter(f=>f!==null)},r]);else{const f=m.map(c=>j(o.h,c)).filter(c=>c!==null);if(f.length&&p.push([{type:l?"heading":"title",key:a,...l&&{anchor:h},display:f},r]),"t"in o)for(const c of o.t){const g=m.map(_=>j(c,_)).filter(_=>_!==null);g.length&&p.push([{type:"text",key:a,...l&&{anchor:h},display:g},r])}}}),Q(n).sort(([,o],[,u])=>"max"==="total"?xt(o,u):kt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=it(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},st=(e,t,s={})=>Ct(t,e,tt(s)).map(({suggestion:n})=>n),v=wt(Q(JSON.parse("{\"/en/\":{\"documentCount\":86,\"nextId\":86,\"documentIds\":{\"0\":\"v-2d0a870d\",\"1\":\"v-2d0a870d#安装\",\"2\":\"v-2d0a870d#更新\",\"3\":\"v-2d0a870d#qq频道\",\"4\":\"v-3663a21b\",\"5\":\"v-3663a21b#安装\",\"6\":\"v-3663a21b#更新\",\"7\":\"v-8284578a\",\"8\":\"v-8284578a#什么是timehelper\",\"9\":\"v-8284578a#主要特性有哪些\",\"10\":\"v-8284578a#为什么不是carbon\",\"11\":\"v-8284578a#开源初衷是什么\",\"12\":\"v-2426bc8c\",\"13\":\"v-79d0fb72\",\"14\":\"v-6ade37b0\",\"15\":\"v-517d87f1\",\"16\":\"v-517d87f1#istoday\",\"17\":\"v-517d87f1#判断日期是否为今天\",\"18\":\"v-517d87f1#参数\",\"19\":\"v-517d87f1#返回值\",\"20\":\"v-517d87f1#示例代码\",\"21\":\"v-517d87f1#isthisweek\",\"22\":\"v-517d87f1#判断日期是否为本周\",\"23\":\"v-517d87f1#参数-1\",\"24\":\"v-517d87f1#返回值-1\",\"25\":\"v-517d87f1#示例代码-1\",\"26\":\"v-517d87f1#isthismonth\",\"27\":\"v-517d87f1#判断日期是否为本月\",\"28\":\"v-517d87f1#参数-2\",\"29\":\"v-517d87f1#返回值-2\",\"30\":\"v-517d87f1#示例代码-2\",\"31\":\"v-517d87f1#isthisyear\",\"32\":\"v-517d87f1#判断日期是否为今年\",\"33\":\"v-517d87f1#参数-3\",\"34\":\"v-517d87f1#返回值-3\",\"35\":\"v-517d87f1#示例代码-3\",\"36\":\"v-517d87f1#getweekday\",\"37\":\"v-517d87f1#判断日期是星期几\",\"38\":\"v-517d87f1#参数-4\",\"39\":\"v-517d87f1#返回值-4\",\"40\":\"v-517d87f1#示例代码-4\",\"41\":\"v-517d87f1#isweekday\",\"42\":\"v-517d87f1#判断日期是否为平常日\",\"43\":\"v-517d87f1#参数-5\",\"44\":\"v-517d87f1#返回值-5\",\"45\":\"v-517d87f1#示例代码-5\",\"46\":\"v-517d87f1#isweekend\",\"47\":\"v-517d87f1#判断日期是否为周末\",\"48\":\"v-517d87f1#参数-6\",\"49\":\"v-517d87f1#返回值-6\",\"50\":\"v-517d87f1#示例代码-6\",\"51\":\"v-3e70b19b\",\"52\":\"v-3e70b19b#tofriendly\",\"53\":\"v-3e70b19b#返回友好的日期格式-如n秒前\",\"54\":\"v-3e70b19b#参数\",\"55\":\"v-3e70b19b#返回值\",\"56\":\"v-3e70b19b#示例代码\",\"57\":\"v-668f1f93\",\"58\":\"v-668f1f93#secondendtoday\",\"59\":\"v-668f1f93#获取到今天晚上零点之前的秒数\",\"60\":\"v-668f1f93#参数\",\"61\":\"v-668f1f93#返回值\",\"62\":\"v-668f1f93#示例代码\",\"63\":\"v-668f1f93#secondminute\",\"64\":\"v-668f1f93#获取n分钟的秒数\",\"65\":\"v-668f1f93#返回值-1\",\"66\":\"v-668f1f93#示例代码-1\",\"67\":\"v-668f1f93#secondhour\",\"68\":\"v-668f1f93#获取n小时的秒数\",\"69\":\"v-668f1f93#参数-1\",\"70\":\"v-668f1f93#返回值-2\",\"71\":\"v-668f1f93#示例代码-2\",\"72\":\"v-668f1f93#secondday\",\"73\":\"v-668f1f93#获取n天的秒数\",\"74\":\"v-668f1f93#参数-2\",\"75\":\"v-668f1f93#返回值-3\",\"76\":\"v-668f1f93#示例代码-3\",\"77\":\"v-668f1f93#secondweek\",\"78\":\"v-668f1f93#获取n周的秒数\",\"79\":\"v-668f1f93#参数-3\",\"80\":\"v-668f1f93#返回值-4\",\"81\":\"v-668f1f93#示例代码-4\",\"82\":\"v-7836e33c\",\"83\":\"v-fb1db95c\",\"84\":\"v-7a5fcbeb\",\"85\":\"v-52e6c736\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[1,17],\"2\":[1,3],\"3\":[1,4],\"4\":[2,6],\"5\":[1,11],\"6\":[1,3],\"7\":[2],\"8\":[2,13],\"9\":[2,10],\"10\":[3,8],\"11\":[2,8],\"12\":[2],\"13\":[2,7],\"14\":[2,3],\"15\":[2],\"16\":[2],\"17\":[1],\"18\":[1,6],\"19\":[1,4],\"20\":[1,11],\"21\":[2],\"22\":[1],\"23\":[1,6],\"24\":[1,4],\"25\":[1,8],\"26\":[2],\"27\":[1],\"28\":[1,6],\"29\":[1,4],\"30\":[1,6],\"31\":[2],\"32\":[1],\"33\":[1,6],\"34\":[1,4],\"35\":[1,8],\"36\":[2],\"37\":[1],\"38\":[1,7],\"39\":[1,4],\"40\":[1,12],\"41\":[2],\"42\":[1],\"43\":[1,7],\"44\":[1,3],\"45\":[1,8],\"46\":[2],\"47\":[1],\"48\":[1,7],\"49\":[1,3],\"50\":[1,6],\"51\":[2,4],\"52\":[2],\"53\":[2],\"54\":[1,12],\"55\":[1,1],\"56\":[1,17],\"57\":[2,3],\"58\":[2],\"59\":[1],\"60\":[1,1],\"61\":[1,1],\"62\":[1,5],\"63\":[2],\"64\":[1,7],\"65\":[1,1],\"66\":[1,6],\"67\":[2],\"68\":[1],\"69\":[1,7],\"70\":[1,1],\"71\":[1,6],\"72\":[2],\"73\":[1],\"74\":[1,7],\"75\":[1,1],\"76\":[1,5],\"77\":[2],\"78\":[1],\"79\":[1,7],\"80\":[1,1],\"81\":[1,6],\"82\":[2,2],\"83\":[2,2],\"84\":[2],\"85\":[2,2]},\"averageFieldLength\":[1.3604651162790697,6.082120495491297],\"storedFields\":{\"0\":{\"h\":\"主页\"},\"1\":{\"h\":\"安装\",\"t\":[\"Info\",\"版本要求: PHP >= 7.1\",\"安装非常简单，因为它是一个标准的 Composer 包，直接使用以下命令安装。\",\"composer require zjkal/time-helper \"]},\"2\":{\"h\":\"更新\",\"t\":[\"composer update \"]},\"3\":{\"h\":\"QQ频道\",\"t\":[\"点击或扫一扫以下二维码,加入QQ频道\",\"QQ频道:世界上最好的编程语言\"]},\"4\":{\"h\":\"🚀 安装\",\"t\":[\"Tips\",\"版本要求: PHP >= 7.1\"]},\"5\":{\"h\":\"安装\",\"t\":[\"安装非常简单，因为它是一个标准的 Composer 包，直接使用以下命令安装。\",\"composer require zjkal/time-helper \"]},\"6\":{\"h\":\"更新\",\"t\":[\"composer update\\n\"]},\"7\":{\"h\":\"🛎️ 简介\"},\"8\":{\"h\":\"什么是TimeHelper?\",\"t\":[\"TimeHelper 是一个简单易用的PHP时间日期助手类库,可以快速实现常用的时间日期操作,比如获取指定时间的秒数,获取友好的时间格式,判断时间范围,计算两个时间相差值,返回N小时/天/星期/月/年前或者后的时间戳等等。\"]},\"9\":{\"h\":\"主要特性有哪些？\",\"t\":[\"简单易用: 不依赖任何扩展,开箱即用\",\"化繁为简: 所有方法都可以传入任意类型的时间日期格式或时间戳\",\"快捷高效: 所有操作只需要一个静态方法即可完成\",\"长期维护: 作者为自由职业者,保证项目的长期稳定和持续更新\"]},\"10\":{\"h\":\"为什么不是 Carbon ?\",\"t\":[\"毫无疑问，carbon作为PHP时间日期助手类库，是十分强大的，但是我觉得还是不够简洁。因此TimeHelper出现了。个人观点，不喜勿喷。\"]},\"11\":{\"h\":\"开源初衷是什么？\",\"t\":[\"时间日期的操作，是经常会用到的。刚开始只是自己使用，后来做成Composer包分享给朋友们以后，反响还不错。所以决定把文档完善起来，希望让更多的程序Yuan不需要重复造轮子。\"]},\"12\":{\"h\":\"🍊 计算相差值\"},\"13\":{\"h\":\"🍏 判断国内节假日\",\"t\":[\"Tips\",\"专门针对国内的节假日进行判断, 目前包含2020年-2024年的节假日数据, 后续也会持续更新. 为了便于维护和使用, 另起一个类ChinaHoliday\"]},\"14\":{\"h\":\"🍍 日期转换\",\"t\":[\"Tips\",\"用于爬虫爬取网页或第三方程序对接时,时间格式不统一的转换\"]},\"15\":{\"h\":\"🍉 判断时间范围\"},\"16\":{\"h\":\"isToday()\"},\"17\":{\"h\":\"判断日期是否为今天\"},\"18\":{\"h\":\"参数\",\"t\":[\"参数\",\"描述\",\"是否必须\",\"datetime\",\"任意类型的字符串时间或时间戳\",\"必须\"]},\"19\":{\"h\":\"返回值\",\"t\":[\"Bool类型的结果: true 或 false\"]},\"20\":{\"h\":\"示例代码\",\"t\":[\"/* 判断日期是否为今天 */ TimeHelper::isToday('2020-4-10 23:01:11'); // false \"]},\"21\":{\"h\":\"isThisWeek()\"},\"22\":{\"h\":\"判断日期是否为本周\"},\"23\":{\"h\":\"参数\",\"t\":[\"参数\",\"描述\",\"是否必须\",\"datetime\",\"任意类型的字符串时间或时间戳\",\"必须\"]},\"24\":{\"h\":\"返回值\",\"t\":[\"Bool类型的结果: true 或 false\"]},\"25\":{\"h\":\"示例代码\",\"t\":[\"/* 判断日期是否为本周 */ TimeHelper::isThisWeek('2020-5-1'); // false \"]},\"26\":{\"h\":\"isThisMonth()\"},\"27\":{\"h\":\"判断日期是否为本月\"},\"28\":{\"h\":\"参数\",\"t\":[\"参数\",\"描述\",\"是否必须\",\"datetime\",\"任意类型的字符串时间或时间戳\",\"必须\"]},\"29\":{\"h\":\"返回值\",\"t\":[\"Bool类型的结果: true 或 false\"]},\"30\":{\"h\":\"示例代码\",\"t\":[\"/* 判断日期是否为本月 */ TimeHelper::isThisMonth(1586451741); // false \"]},\"31\":{\"h\":\"isThisYear()\"},\"32\":{\"h\":\"判断日期是否为今年\"},\"33\":{\"h\":\"参数\",\"t\":[\"参数\",\"描述\",\"是否必须\",\"datetime\",\"任意类型的字符串时间或时间戳\",\"必须\"]},\"34\":{\"h\":\"返回值\",\"t\":[\"Bool类型的结果: true 或 false\"]},\"35\":{\"h\":\"示例代码\",\"t\":[\"/* 判断日期是否为今年 */ TimeHelper::isThisYear('Apr 11, 2023'); // true \"]},\"36\":{\"h\":\"getWeekDay()\"},\"37\":{\"h\":\"判断日期是星期几\"},\"38\":{\"h\":\"参数\",\"t\":[\"参数\",\"描述\",\"是否必须\",\"datetime\",\"任意类型的字符串时间或时间戳\",\"可选, 默认值为当前日期\"]},\"39\":{\"h\":\"返回值\",\"t\":[\"返回值为1-7, 1为星期一... 7为星期日\"]},\"40\":{\"h\":\"示例代码\",\"t\":[\"/* 判断指定时间是星期几 */ TimeHelper::getWeekDay('2023-10-01 12:31:01'); // 7 /* 判断今天是星期几 */ TimeHelper::getWeekDay(); // 3 \"]},\"41\":{\"h\":\"isWeekday()\"},\"42\":{\"h\":\"判断日期是否为平常日\"},\"43\":{\"h\":\"参数\",\"t\":[\"参数\",\"描述\",\"是否必须\",\"datetime\",\"任意类型的字符串时间或时间戳\",\"可选, 默认值为当前日期\"]},\"44\":{\"h\":\"返回值\",\"t\":[\"Bool类型的结果: 周一到周五返回true, 周六日返回false\"]},\"45\":{\"h\":\"示例代码\",\"t\":[\"/* 判断指定时间是否为平常日 */ TimeHelper::isWeekday('Mar 8, 2023'); // true \"]},\"46\":{\"h\":\"isWeekend()\"},\"47\":{\"h\":\"判断日期是否为周末\"},\"48\":{\"h\":\"参数\",\"t\":[\"参数\",\"描述\",\"是否必须\",\"datetime\",\"任意类型的字符串时间或时间戳\",\"可选, 默认值为当前日期\"]},\"49\":{\"h\":\"返回值\",\"t\":[\"Bool类型的结果: 周六日返回true, 周一到周五返回false\"]},\"50\":{\"h\":\"示例代码\",\"t\":[\"/* 判断指定时间是否为周末 */\\nTimeHelper::isWeekend(1698516612);\\n// true\\n\"]},\"51\":{\"h\":\"🍈 友好的日期格式\",\"t\":[\"Tips\",\"一般用于社交类平台,评论,论坛等\"]},\"52\":{\"h\":\"toFriendly()\"},\"53\":{\"h\":\"返回友好的日期格式,如N秒前\"},\"54\":{\"h\":\"参数\",\"t\":[\"参数\",\"描述\",\"是否必须\",\"time\",\"任意类型的字符串时间或时间戳\",\"必须\",\"lang\",\"语言: 中文是zh, 英文是en\",\"可选, 默认值为zh\"]},\"55\":{\"h\":\"返回值\",\"t\":[\"友好的日期格式\"]},\"56\":{\"h\":\"示例代码\",\"t\":[\"/* 转换为友好的日期格式 */\\nTimeHelper::toFriendly('2022-3-2 10:15:33');\\n// 3天前\\n\\n/* 转换为友好的日期格式(英文) */\\nTimeHelper::toFriendly(1646186290, 'en');\\n// 6 hours ago\\n\"]},\"57\":{\"h\":\"🍇 获取需要的秒数\",\"t\":[\"Tips\",\"一般用于设置缓存时间,设置结束时间等\"]},\"58\":{\"h\":\"secondEndToday()\"},\"59\":{\"h\":\"获取到今天晚上零点之前的秒数\"},\"60\":{\"h\":\"参数\",\"t\":[\"无\"]},\"61\":{\"h\":\"返回值\",\"t\":[\"从此刻到今天晚上0点的秒数\"]},\"62\":{\"h\":\"示例代码\",\"t\":[\"/* 获取到今天晚上零点之前的秒数 */ TimeHelper::secondEndToday(); // 32811 \"]},\"63\":{\"h\":\"secondMinute()\"},\"64\":{\"h\":\"获取N分钟的秒数\",\"t\":[\"参数\",\"参数\",\"描述\",\"是否必须\",\"minutes\",\"要返回多少分钟的秒数\",\"可选, 默认值为1\"]},\"65\":{\"h\":\"返回值\",\"t\":[\"N分钟的秒数\"]},\"66\":{\"h\":\"示例代码\",\"t\":[\"/* 获取5分钟的秒数 */ TimeHelper::secondMinute(5); // 300 \"]},\"67\":{\"h\":\"secondHour()\"},\"68\":{\"h\":\"获取N小时的秒数\"},\"69\":{\"h\":\"参数\",\"t\":[\"参数\",\"描述\",\"是否必须\",\"hours\",\"要返回多少小时的秒数\",\"可选, 默认值为1\"]},\"70\":{\"h\":\"返回值\",\"t\":[\"N小时的秒数\"]},\"71\":{\"h\":\"示例代码\",\"t\":[\"/* 获取10小时的秒数 */ TimeHelper::secondHour(10); // 36000 \"]},\"72\":{\"h\":\"secondDay()\"},\"73\":{\"h\":\"获取N天的秒数\"},\"74\":{\"h\":\"参数\",\"t\":[\"参数\",\"描述\",\"是否必须\",\"days\",\"要返回多少天的秒数\",\"可选, 默认值为1\"]},\"75\":{\"h\":\"返回值\",\"t\":[\"N天的秒数\"]},\"76\":{\"h\":\"示例代码\",\"t\":[\"/* 获取1天的秒数 */ TimeHelper::secondDay(); // 86400 \"]},\"77\":{\"h\":\"secondWeek()\"},\"78\":{\"h\":\"获取N周的秒数\"},\"79\":{\"h\":\"参数\",\"t\":[\"参数\",\"描述\",\"是否必须\",\"weeks\",\"要返回多少周的秒数\",\"可选, 默认值为1\"]},\"80\":{\"h\":\"返回值\",\"t\":[\"N周的秒数\"]},\"81\":{\"h\":\"示例代码\",\"t\":[\"/* 获取1周的秒数 */\\nTimeHelper::secondWeek(1);\\n// 604800\\n\"]},\"82\":{\"h\":\"🍌 获取高精度时间戳\",\"t\":[\"Tips\",\"生成订单号或者与其他编程语言对接时可能会用到\"]},\"83\":{\"h\":\"🥭 平闰年相关\",\"t\":[\"Tips\",\"比原生方法使用起来更方便\"]},\"84\":{\"h\":\"🍋 获取前后时间戳\"},\"85\":{\"h\":\"🍎 时区相关\",\"t\":[\"Tips\",\"主要提供获取不同时区的时间和转换不同时区的时间的方法\"]}},\"dirtCount\":0,\"index\":[[\"时区相关\",{\"0\":{\"85\":1}}],[\"时间格式不统一的转换\",{\"1\":{\"14\":1}}],[\"时间日期的操作\",{\"1\":{\"11\":1}}],[\"比原生方法使用起来更方便\",{\"1\":{\"83\":1}}],[\"比如获取指定时间的秒数\",{\"1\":{\"8\":1}}],[\"平闰年相关\",{\"0\":{\"83\":1}}],[\"🥭\",{\"0\":{\"83\":1}}],[\"生成订单号或者与其他编程语言对接时可能会用到\",{\"1\":{\"82\":1}}],[\"weeks\",{\"1\":{\"79\":1}}],[\"days\",{\"1\":{\"74\":1}}],[\"datetime\",{\"1\":{\"18\":1,\"23\":1,\"28\":1,\"33\":1,\"38\":1,\"43\":1,\"48\":1}}],[\"n周的秒数\",{\"1\":{\"80\":1}}],[\"n天的秒数\",{\"1\":{\"75\":1}}],[\"n小时的秒数\",{\"1\":{\"70\":1}}],[\"n分钟的秒数\",{\"1\":{\"65\":1}}],[\"要返回多少周的秒数\",{\"1\":{\"79\":1}}],[\"要返回多少天的秒数\",{\"1\":{\"74\":1}}],[\"要返回多少小时的秒数\",{\"1\":{\"69\":1}}],[\"要返回多少分钟的秒数\",{\"1\":{\"64\":1}}],[\"minutes\",{\"1\":{\"64\":1}}],[\"mar\",{\"1\":{\"45\":1}}],[\"secondweek\",{\"0\":{\"77\":1},\"1\":{\"81\":1}}],[\"secondday\",{\"0\":{\"72\":1},\"1\":{\"76\":1}}],[\"secondhour\",{\"0\":{\"67\":1},\"1\":{\"71\":1}}],[\"secondminute\",{\"0\":{\"63\":1},\"1\":{\"66\":1}}],[\"secondendtoday\",{\"0\":{\"58\":1},\"1\":{\"62\":1}}],[\"从此刻到今天晚上0点的秒数\",{\"1\":{\"61\":1}}],[\"无\",{\"1\":{\"60\":1}}],[\"设置结束时间等\",{\"1\":{\"57\":1}}],[\"一般用于设置缓存时间\",{\"1\":{\"57\":1}}],[\"一般用于社交类平台\",{\"1\":{\"51\":1}}],[\"获取前后时间戳\",{\"0\":{\"84\":1}}],[\"获取高精度时间戳\",{\"0\":{\"82\":1}}],[\"获取1周的秒数\",{\"1\":{\"81\":1}}],[\"获取1天的秒数\",{\"1\":{\"76\":1}}],[\"获取10小时的秒数\",{\"1\":{\"71\":1}}],[\"获取n周的秒数\",{\"0\":{\"78\":1}}],[\"获取n天的秒数\",{\"0\":{\"73\":1}}],[\"获取n小时的秒数\",{\"0\":{\"68\":1}}],[\"获取n分钟的秒数\",{\"0\":{\"64\":1}}],[\"获取5分钟的秒数\",{\"1\":{\"66\":1}}],[\"获取到今天晚上零点之前的秒数\",{\"0\":{\"59\":1},\"1\":{\"62\":1}}],[\"获取需要的秒数\",{\"0\":{\"57\":1}}],[\"获取友好的时间格式\",{\"1\":{\"8\":1}}],[\"ago\",{\"1\":{\"56\":1}}],[\"apr\",{\"1\":{\"35\":1}}],[\"hours\",{\"1\":{\"56\":1,\"69\":1}}],[\"helper\",{\"1\":{\"1\":1,\"5\":1}}],[\"604800\",{\"1\":{\"81\":1}}],[\"6\",{\"1\":{\"56\":1}}],[\"en\",{\"1\":{\"56\":1}}],[\"英文\",{\"1\":{\"56\":1}}],[\"英文是en\",{\"1\":{\"54\":1}}],[\"转换为友好的日期格式\",{\"1\":{\"56\":2}}],[\"默认值为1\",{\"1\":{\"64\":1,\"69\":1,\"74\":1,\"79\":1}}],[\"默认值为zh\",{\"1\":{\"54\":1}}],[\"默认值为当前日期\",{\"1\":{\"38\":1,\"43\":1,\"48\":1}}],[\"中文是zh\",{\"1\":{\"54\":1}}],[\"语言\",{\"1\":{\"54\":1}}],[\"lang\",{\"1\":{\"54\":1}}],[\"如n秒前\",{\"0\":{\"53\":1}}],[\"论坛等\",{\"1\":{\"51\":1}}],[\"评论\",{\"1\":{\"51\":1}}],[\"友好的日期格式\",{\"0\":{\"51\":1},\"1\":{\"55\":1}}],[\"86400\",{\"1\":{\"76\":1}}],[\"8\",{\"1\":{\"45\":1}}],[\"周一到周五返回false\",{\"1\":{\"49\":1}}],[\"周一到周五返回true\",{\"1\":{\"44\":1}}],[\"周六日返回true\",{\"1\":{\"49\":1}}],[\"周六日返回false\",{\"1\":{\"44\":1}}],[\"36000\",{\"1\":{\"71\":1}}],[\"300\",{\"1\":{\"66\":1}}],[\"32811\",{\"1\":{\"62\":1}}],[\"3天前\",{\"1\":{\"56\":1}}],[\"33\",{\"1\":{\"56\":1}}],[\"3\",{\"1\":{\"40\":1,\"56\":1}}],[\"31\",{\"1\":{\"40\":1}}],[\"可选\",{\"1\":{\"38\":1,\"43\":1,\"48\":1,\"54\":1,\"64\":1,\"69\":1,\"74\":1,\"79\":1}}],[\"可以快速实现常用的时间日期操作\",{\"1\":{\"8\":1}}],[\"getweekday\",{\"0\":{\"36\":1},\"1\":{\"40\":2}}],[\"5\",{\"1\":{\"25\":1,\"66\":1}}],[\"01\",{\"1\":{\"20\":1,\"40\":2}}],[\"2\",{\"1\":{\"56\":1}}],[\"23\",{\"1\":{\"20\":1}}],[\"2022\",{\"1\":{\"56\":1}}],[\"2023\",{\"1\":{\"35\":1,\"40\":1,\"45\":1}}],[\"2020\",{\"1\":{\"20\":1,\"25\":1}}],[\"2024年的节假日数据\",{\"1\":{\"13\":1}}],[\"4\",{\"1\":{\"20\":1}}],[\"示例代码\",{\"0\":{\"20\":1,\"25\":1,\"30\":1,\"35\":1,\"40\":1,\"45\":1,\"50\":1,\"56\":1,\"62\":1,\"66\":1,\"71\":1,\"76\":1,\"81\":1}}],[\"false\",{\"1\":{\"19\":1,\"20\":1,\"24\":1,\"25\":1,\"29\":1,\"30\":1,\"34\":1}}],[\"或\",{\"1\":{\"19\":1,\"24\":1,\"29\":1,\"34\":1}}],[\"tofriendly\",{\"0\":{\"52\":1},\"1\":{\"56\":2}}],[\"true\",{\"1\":{\"19\":1,\"24\":1,\"29\":1,\"34\":1,\"35\":1,\"45\":1,\"50\":1}}],[\"tips\",{\"1\":{\"4\":1,\"13\":1,\"14\":1,\"51\":1,\"57\":1,\"82\":1,\"83\":1,\"85\":1}}],[\"timehelper\",{\"1\":{\"8\":1,\"20\":1,\"25\":1,\"30\":1,\"35\":1,\"40\":2,\"45\":1,\"50\":1,\"56\":2,\"62\":1,\"66\":1,\"71\":1,\"76\":1,\"81\":1}}],[\"time\",{\"1\":{\"1\":1,\"5\":1,\"54\":1}}],[\"bool类型的结果\",{\"1\":{\"19\":1,\"24\":1,\"29\":1,\"34\":1,\"44\":1,\"49\":1}}],[\"返回友好的日期格式\",{\"0\":{\"53\":1}}],[\"返回值为1\",{\"1\":{\"39\":1}}],[\"返回值\",{\"0\":{\"19\":1,\"24\":1,\"29\":1,\"34\":1,\"39\":1,\"44\":1,\"49\":1,\"55\":1,\"61\":1,\"65\":1,\"70\":1,\"75\":1,\"80\":1}}],[\"返回n小时\",{\"1\":{\"8\":1}}],[\"必须\",{\"1\":{\"18\":1,\"23\":1,\"28\":1,\"33\":1,\"54\":1}}],[\"任意类型的字符串时间或时间戳\",{\"1\":{\"18\":1,\"23\":1,\"28\":1,\"33\":1,\"38\":1,\"43\":1,\"48\":1,\"54\":1}}],[\"描述\",{\"1\":{\"18\":1,\"23\":1,\"28\":1,\"33\":1,\"38\":1,\"43\":1,\"48\":1,\"54\":1,\"64\":1,\"69\":1,\"74\":1,\"79\":1}}],[\"参数\",{\"0\":{\"18\":1,\"23\":1,\"28\":1,\"33\":1,\"38\":1,\"43\":1,\"48\":1,\"54\":1,\"60\":1,\"69\":1,\"74\":1,\"79\":1},\"1\":{\"18\":1,\"23\":1,\"28\":1,\"33\":1,\"38\":1,\"43\":1,\"48\":1,\"54\":1,\"64\":2,\"69\":1,\"74\":1,\"79\":1}}],[\"isweekend\",{\"0\":{\"46\":1},\"1\":{\"50\":1}}],[\"isweekday\",{\"0\":{\"41\":1},\"1\":{\"45\":1}}],[\"isthisyear\",{\"0\":{\"31\":1},\"1\":{\"35\":1}}],[\"isthismonth\",{\"0\":{\"26\":1},\"1\":{\"30\":1}}],[\"isthisweek\",{\"0\":{\"21\":1},\"1\":{\"25\":1}}],[\"istoday\",{\"0\":{\"16\":1},\"1\":{\"20\":1}}],[\"info\",{\"1\":{\"1\":1}}],[\"用于爬虫爬取网页或第三方程序对接时\",{\"1\":{\"14\":1}}],[\"日期转换\",{\"0\":{\"14\":1}}],[\"另起一个类chinaholiday\",{\"1\":{\"13\":1}}],[\"为了便于维护和使用\",{\"1\":{\"13\":1}}],[\"为什么不是\",{\"0\":{\"10\":1}}],[\"后续也会持续更新\",{\"1\":{\"13\":1}}],[\"后来做成composer包分享给朋友们以后\",{\"1\":{\"11\":1}}],[\"目前包含2020年\",{\"1\":{\"13\":1}}],[\"专门针对国内的节假日进行判断\",{\"1\":{\"13\":1}}],[\"判断指定时间是否为周末\",{\"1\":{\"50\":1}}],[\"判断指定时间是否为平常日\",{\"1\":{\"45\":1}}],[\"判断指定时间是星期几\",{\"1\":{\"40\":1}}],[\"判断今天是星期几\",{\"1\":{\"40\":1}}],[\"判断日期是星期几\",{\"0\":{\"37\":1}}],[\"判断日期是否为周末\",{\"0\":{\"47\":1}}],[\"判断日期是否为平常日\",{\"0\":{\"42\":1}}],[\"判断日期是否为今年\",{\"0\":{\"32\":1},\"1\":{\"35\":1}}],[\"判断日期是否为今天\",{\"0\":{\"17\":1},\"1\":{\"20\":1}}],[\"判断日期是否为本月\",{\"0\":{\"27\":1},\"1\":{\"30\":1}}],[\"判断日期是否为本周\",{\"0\":{\"22\":1},\"1\":{\"25\":1}}],[\"判断国内节假日\",{\"0\":{\"13\":1}}],[\"判断时间范围\",{\"0\":{\"15\":1},\"1\":{\"8\":1}}],[\"🍎\",{\"0\":{\"85\":1}}],[\"🍋\",{\"0\":{\"84\":1}}],[\"🍌\",{\"0\":{\"82\":1}}],[\"🍇\",{\"0\":{\"57\":1}}],[\"🍈\",{\"0\":{\"51\":1}}],[\"🍉\",{\"0\":{\"15\":1}}],[\"🍍\",{\"0\":{\"14\":1}}],[\"🍏\",{\"0\":{\"13\":1}}],[\"🍊\",{\"0\":{\"12\":1}}],[\"计算相差值\",{\"0\":{\"12\":1}}],[\"计算两个时间相差值\",{\"1\":{\"8\":1}}],[\"希望让更多的程序yuan不需要重复造轮子\",{\"1\":{\"11\":1}}],[\"所以决定把文档完善起来\",{\"1\":{\"11\":1}}],[\"所有操作只需要一个静态方法即可完成\",{\"1\":{\"9\":1}}],[\"所有方法都可以传入任意类型的时间日期格式或时间戳\",{\"1\":{\"9\":1}}],[\"反响还不错\",{\"1\":{\"11\":1}}],[\"刚开始只是自己使用\",{\"1\":{\"11\":1}}],[\"开源初衷是什么\",{\"0\":{\"11\":1}}],[\"开箱即用\",{\"1\":{\"9\":1}}],[\"不喜勿喷\",{\"1\":{\"10\":1}}],[\"不依赖任何扩展\",{\"1\":{\"9\":1}}],[\"个人观点\",{\"1\":{\"10\":1}}],[\"因此timehelper出现了\",{\"1\":{\"10\":1}}],[\"因为它是一个标准的\",{\"1\":{\"1\":1,\"5\":1}}],[\"但是我觉得还是不够简洁\",{\"1\":{\"10\":1}}],[\"是否必须\",{\"1\":{\"18\":1,\"23\":1,\"28\":1,\"33\":1,\"38\":1,\"43\":1,\"48\":1,\"54\":1,\"64\":1,\"69\":1,\"74\":1,\"79\":1}}],[\"是经常会用到的\",{\"1\":{\"11\":1}}],[\"是十分强大的\",{\"1\":{\"10\":1}}],[\"是一个简单易用的php时间日期助手类库\",{\"1\":{\"8\":1}}],[\"毫无疑问\",{\"1\":{\"10\":1}}],[\"carbon作为php时间日期助手类库\",{\"1\":{\"10\":1}}],[\"carbon\",{\"0\":{\"10\":1}}],[\"composer\",{\"1\":{\"1\":2,\"2\":1,\"5\":2,\"6\":1}}],[\"保证项目的长期稳定和持续更新\",{\"1\":{\"9\":1}}],[\"作者为自由职业者\",{\"1\":{\"9\":1}}],[\"长期维护\",{\"1\":{\"9\":1}}],[\"快捷高效\",{\"1\":{\"9\":1}}],[\"化繁为简\",{\"1\":{\"9\":1}}],[\"简单易用\",{\"1\":{\"9\":1}}],[\"简介\",{\"0\":{\"7\":1}}],[\"主要提供获取不同时区的时间和转换不同时区的时间的方法\",{\"1\":{\"85\":1}}],[\"主要特性有哪些\",{\"0\":{\"9\":1}}],[\"主页\",{\"0\":{\"0\":1}}],[\"年前或者后的时间戳等等\",{\"1\":{\"8\":1}}],[\"月\",{\"1\":{\"8\":1}}],[\"星期\",{\"1\":{\"8\":1}}],[\"天\",{\"1\":{\"8\":1}}],[\"什么是timehelper\",{\"0\":{\"8\":1}}],[\"🛎️\",{\"0\":{\"7\":1}}],[\"🚀\",{\"0\":{\"4\":1}}],[\"世界上最好的编程语言\",{\"1\":{\"3\":1}}],[\"加入qq频道\",{\"1\":{\"3\":1}}],[\"点击或扫一扫以下二维码\",{\"1\":{\"3\":1}}],[\"qq频道\",{\"0\":{\"3\":1},\"1\":{\"3\":1}}],[\"update\",{\"1\":{\"2\":1,\"6\":1}}],[\"更新\",{\"0\":{\"2\":1,\"6\":1}}],[\"zjkal\",{\"1\":{\"1\":1,\"5\":1}}],[\"require\",{\"1\":{\"1\":1,\"5\":1}}],[\"直接使用以下命令安装\",{\"1\":{\"1\":1,\"5\":1}}],[\"包\",{\"1\":{\"1\":1,\"5\":1}}],[\"1646186290\",{\"1\":{\"56\":1}}],[\"1698516612\",{\"1\":{\"50\":1}}],[\"15\",{\"1\":{\"56\":1}}],[\"1586451741\",{\"1\":{\"30\":1}}],[\"12\",{\"1\":{\"40\":1}}],[\"1为星期一\",{\"1\":{\"39\":1}}],[\"11\",{\"1\":{\"20\":1,\"35\":1}}],[\"10\",{\"1\":{\"20\":1,\"40\":1,\"56\":1,\"71\":1}}],[\"1\",{\"1\":{\"1\":1,\"4\":1,\"25\":1,\"81\":1}}],[\"7为星期日\",{\"1\":{\"39\":1}}],[\"7\",{\"1\":{\"1\":1,\"4\":1,\"39\":1,\"40\":1}}],[\">=\",{\"1\":{\"1\":1,\"4\":1}}],[\"php\",{\"1\":{\"1\":1,\"4\":1}}],[\"版本要求\",{\"1\":{\"1\":1,\"4\":1}}],[\"安装非常简单\",{\"1\":{\"1\":1,\"5\":1}}],[\"安装\",{\"0\":{\"1\":1,\"4\":1,\"5\":1}}]],\"serializationVersion\":2},\"/\":{\"documentCount\":115,\"nextId\":115,\"documentIds\":{\"0\":\"v-8daa1a0e\",\"1\":\"v-8daa1a0e#安装\",\"2\":\"v-8daa1a0e#更新\",\"3\":\"v-8daa1a0e#qq频道\",\"4\":\"v-4e8563af\",\"5\":\"v-4e8563af#安装\",\"6\":\"v-4e8563af#更新\",\"7\":\"v-5240d462\",\"8\":\"v-5240d462#什么是timehelper\",\"9\":\"v-5240d462#主要特性有哪些\",\"10\":\"v-5240d462#为什么不是carbon\",\"11\":\"v-5240d462#开源初衷是什么\",\"12\":\"v-d60c8f64\",\"13\":\"v-d60c8f64#diffdays\",\"14\":\"v-d60c8f64#计算两个日期相差的天数\",\"15\":\"v-d60c8f64#参数\",\"16\":\"v-d60c8f64#返回值\",\"17\":\"v-d60c8f64#示例代码\",\"18\":\"v-d60c8f64#diffweeks\",\"19\":\"v-d60c8f64#计算两个日期相差的周数\",\"20\":\"v-d60c8f64#参数-1\",\"21\":\"v-d60c8f64#返回值-1\",\"22\":\"v-d60c8f64#示例代码-1\",\"23\":\"v-d60c8f64#diffmonths\",\"24\":\"v-d60c8f64#计算两个日期相差的月数\",\"25\":\"v-d60c8f64#参数-2\",\"26\":\"v-d60c8f64#返回值-2\",\"27\":\"v-d60c8f64#示例代码-2\",\"28\":\"v-d60c8f64#diffyears\",\"29\":\"v-d60c8f64#计算两个日期相差的年数\",\"30\":\"v-d60c8f64#参数-3\",\"31\":\"v-d60c8f64#返回值-3\",\"32\":\"v-d60c8f64#示例代码-3\",\"33\":\"v-d60c8f64#compare\",\"34\":\"v-d60c8f64#比较两个时间的大小\",\"35\":\"v-d60c8f64#参数-4\",\"36\":\"v-d60c8f64#返回值-4\",\"37\":\"v-d60c8f64#示例代码-4\",\"38\":\"v-9ab13944\",\"39\":\"v-0a8d3888\",\"40\":\"v-a34cb646\",\"41\":\"v-a34cb646#istoday\",\"42\":\"v-a34cb646#判断日期是否为今天\",\"43\":\"v-a34cb646#参数\",\"44\":\"v-a34cb646#返回值\",\"45\":\"v-a34cb646#示例代码\",\"46\":\"v-a34cb646#isthisweek\",\"47\":\"v-a34cb646#判断日期是否为本周\",\"48\":\"v-a34cb646#参数-1\",\"49\":\"v-a34cb646#返回值-1\",\"50\":\"v-a34cb646#示例代码-1\",\"51\":\"v-a34cb646#isthismonth\",\"52\":\"v-a34cb646#判断日期是否为本月\",\"53\":\"v-a34cb646#参数-2\",\"54\":\"v-a34cb646#返回值-2\",\"55\":\"v-a34cb646#示例代码-2\",\"56\":\"v-a34cb646#isthisyear\",\"57\":\"v-a34cb646#判断日期是否为今年\",\"58\":\"v-a34cb646#参数-3\",\"59\":\"v-a34cb646#返回值-3\",\"60\":\"v-a34cb646#示例代码-3\",\"61\":\"v-a34cb646#getweekday\",\"62\":\"v-a34cb646#判断日期是星期几\",\"63\":\"v-a34cb646#参数-4\",\"64\":\"v-a34cb646#返回值-4\",\"65\":\"v-a34cb646#示例代码-4\",\"66\":\"v-a34cb646#isweekday\",\"67\":\"v-a34cb646#判断日期是否为平常日\",\"68\":\"v-a34cb646#参数-5\",\"69\":\"v-a34cb646#返回值-5\",\"70\":\"v-a34cb646#示例代码-5\",\"71\":\"v-a34cb646#isweekend\",\"72\":\"v-a34cb646#判断日期是否为周末\",\"73\":\"v-a34cb646#参数-6\",\"74\":\"v-a34cb646#返回值-6\",\"75\":\"v-a34cb646#示例代码-6\",\"76\":\"v-c96662f2\",\"77\":\"v-c96662f2#tofriendly\",\"78\":\"v-c96662f2#返回友好的日期格式-如n秒前\",\"79\":\"v-c96662f2#参数\",\"80\":\"v-c96662f2#返回值\",\"81\":\"v-c96662f2#示例代码\",\"82\":\"v-d290c1b2\",\"83\":\"v-d290c1b2#secondendtoday\",\"84\":\"v-d290c1b2#获取到今天晚上零点之前的秒数\",\"85\":\"v-d290c1b2#参数\",\"86\":\"v-d290c1b2#返回值\",\"87\":\"v-d290c1b2#示例代码\",\"88\":\"v-d290c1b2#secondminute\",\"89\":\"v-d290c1b2#获取n分钟的秒数\",\"90\":\"v-d290c1b2#返回值-1\",\"91\":\"v-d290c1b2#示例代码-1\",\"92\":\"v-d290c1b2#secondhour\",\"93\":\"v-d290c1b2#获取n小时的秒数\",\"94\":\"v-d290c1b2#参数-1\",\"95\":\"v-d290c1b2#返回值-2\",\"96\":\"v-d290c1b2#示例代码-2\",\"97\":\"v-d290c1b2#secondday\",\"98\":\"v-d290c1b2#获取n天的秒数\",\"99\":\"v-d290c1b2#参数-2\",\"100\":\"v-d290c1b2#返回值-3\",\"101\":\"v-d290c1b2#示例代码-3\",\"102\":\"v-d290c1b2#secondweek\",\"103\":\"v-d290c1b2#获取n周的秒数\",\"104\":\"v-d290c1b2#参数-3\",\"105\":\"v-d290c1b2#返回值-4\",\"106\":\"v-d290c1b2#示例代码-4\",\"107\":\"v-5a9c3af6\",\"108\":\"v-4a30613e\",\"109\":\"v-8ac49c52\",\"110\":\"v-77901e0e\",\"111\":\"v-ccdc4da0\",\"112\":\"v-d0736a32\",\"113\":\"v-1de27578\",\"114\":\"v-b6b9000a\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[1,17],\"2\":[1,3],\"3\":[1,4],\"4\":[2,6],\"5\":[1,11],\"6\":[1,3],\"7\":[2],\"8\":[2,13],\"9\":[2,10],\"10\":[3,8],\"11\":[2,8],\"12\":[2],\"13\":[2],\"14\":[1],\"15\":[1,11],\"16\":[1,1],\"17\":[1,13],\"18\":[2],\"19\":[1],\"20\":[1,11],\"21\":[1,1],\"22\":[1,11],\"23\":[2],\"24\":[1],\"25\":[1,11],\"26\":[1,1],\"27\":[1,10],\"28\":[2],\"29\":[1],\"30\":[1,11],\"31\":[1,1],\"32\":[1,7],\"33\":[2],\"34\":[1],\"35\":[1,11],\"36\":[1,4],\"37\":[1,11],\"38\":[2,7],\"39\":[2,3],\"40\":[2],\"41\":[2],\"42\":[1],\"43\":[1,6],\"44\":[1,4],\"45\":[1,11],\"46\":[2],\"47\":[1],\"48\":[1,6],\"49\":[1,4],\"50\":[1,8],\"51\":[2],\"52\":[1],\"53\":[1,6],\"54\":[1,4],\"55\":[1,6],\"56\":[2],\"57\":[1],\"58\":[1,6],\"59\":[1,4],\"60\":[1,8],\"61\":[2],\"62\":[1],\"63\":[1,7],\"64\":[1,4],\"65\":[1,12],\"66\":[2],\"67\":[1],\"68\":[1,7],\"69\":[1,3],\"70\":[1,8],\"71\":[2],\"72\":[1],\"73\":[1,7],\"74\":[1,3],\"75\":[1,6],\"76\":[2,4],\"77\":[2],\"78\":[2],\"79\":[1,12],\"80\":[1,1],\"81\":[1,17],\"82\":[2,3],\"83\":[2],\"84\":[1],\"85\":[1,1],\"86\":[1,1],\"87\":[1,5],\"88\":[2],\"89\":[1,7],\"90\":[1,1],\"91\":[1,6],\"92\":[2],\"93\":[1],\"94\":[1,7],\"95\":[1,1],\"96\":[1,6],\"97\":[2],\"98\":[1],\"99\":[1,7],\"100\":[1,1],\"101\":[1,5],\"102\":[2],\"103\":[1],\"104\":[1,7],\"105\":[1,1],\"106\":[1,6],\"107\":[2,2],\"108\":[2,2],\"109\":[2],\"110\":[2,2],\"111\":[2],\"112\":[1],\"113\":[2],\"114\":[1]},\"averageFieldLength\":[1.330434782608696,6.516482195892404],\"storedFields\":{\"0\":{\"h\":\"主页\"},\"1\":{\"h\":\"安装\",\"t\":[\"相关信息\",\"版本要求: PHP >= 7.1\",\"安装非常简单，因为它是一个标准的 Composer 包，直接使用以下命令安装。\",\"composer require zjkal/time-helper \"]},\"2\":{\"h\":\"更新\",\"t\":[\"composer update \"]},\"3\":{\"h\":\"QQ频道\",\"t\":[\"点击或扫一扫以下二维码,加入QQ频道\",\"QQ频道:世界上最好的编程语言\"]},\"4\":{\"h\":\"🚀 安装\",\"t\":[\"提示\",\"版本要求: PHP >= 7.1\"]},\"5\":{\"h\":\"安装\",\"t\":[\"安装非常简单，因为它是一个标准的 Composer 包，直接使用以下命令安装。\",\"composer require zjkal/time-helper \"]},\"6\":{\"h\":\"更新\",\"t\":[\"composer update\\n\"]},\"7\":{\"h\":\"🛎️ 简介\"},\"8\":{\"h\":\"什么是TimeHelper?\",\"t\":[\"TimeHelper 是一个简单易用的PHP时间日期助手类库,可以快速实现常用的时间日期操作,比如获取指定时间的秒数,获取友好的时间格式,判断时间范围,计算两个时间相差值,返回N小时/天/星期/月/年前或者后的时间戳等等。\"]},\"9\":{\"h\":\"主要特性有哪些？\",\"t\":[\"简单易用: 不依赖任何扩展,开箱即用\",\"化繁为简: 所有方法都可以传入任意类型的时间日期格式或时间戳\",\"快捷高效: 所有操作只需要一个静态方法即可完成\",\"长期维护: 作者为自由职业者,保证项目的长期稳定和持续更新\"]},\"10\":{\"h\":\"为什么不是 Carbon ?\",\"t\":[\"毫无疑问，carbon作为PHP时间日期助手类库，是十分强大的，但是我觉得还是不够简洁。因此TimeHelper出现了。个人观点，不喜勿喷。\"]},\"11\":{\"h\":\"开源初衷是什么？\",\"t\":[\"时间日期的操作，是经常会用到的。刚开始只是自己使用，后来做成Composer包分享给朋友们以后，反响还不错。所以决定把文档完善起来，希望让更多的程序Yuan不需要重复造轮子。\"]},\"12\":{\"h\":\"🍊 计算相差值\"},\"13\":{\"h\":\"diffDays()\"},\"14\":{\"h\":\"计算两个日期相差的天数\"},\"15\":{\"h\":\"参数\",\"t\":[\"参数\",\"描述\",\"是否必须\",\"datetime\",\"要计算的时间 (任意类型的字符串时间或时间戳)\",\"必须\",\"new_datetime\",\"要比较的时间 (任意类型的字符串时间或时间戳)\",\"可选, 默认为当前时间\"]},\"16\":{\"h\":\"返回值\",\"t\":[\"两个日期相差的天数\"]},\"17\":{\"h\":\"示例代码\",\"t\":[\"/* 计算以下两个日期相差的天数 */ TimeHelper::diffDays('2023-9-1 12:00:00', '2024-9-1 12:00:00'); // 366 /* 计算以下时间与当前时间相差的天数 */ TimeHelper::diffDays('2023-9-1 12:00:00'); // 30 \"]},\"18\":{\"h\":\"diffWeeks()\"},\"19\":{\"h\":\"计算两个日期相差的周数\"},\"20\":{\"h\":\"参数\",\"t\":[\"参数\",\"描述\",\"是否必须\",\"datetime\",\"要计算的时间 (任意类型的字符串时间或时间戳)\",\"必须\",\"new_datetime\",\"要比较的时间 (任意类型的字符串时间或时间戳)\",\"可选, 默认为当前时间\"]},\"21\":{\"h\":\"返回值\",\"t\":[\"两个日期相差的周数\"]},\"22\":{\"h\":\"示例代码\",\"t\":[\"/* 计算以下两个日期相差的周数 */ TimeHelper::diffWeeks('2023-9-1 12:00:00', 'Sep 8, 2023'); // 1 \"]},\"23\":{\"h\":\"diffMonths()\"},\"24\":{\"h\":\"计算两个日期相差的月数\"},\"25\":{\"h\":\"参数\",\"t\":[\"参数\",\"描述\",\"是否必须\",\"datetime\",\"要计算的时间 (任意类型的字符串时间或时间戳)\",\"必须\",\"new_datetime\",\"要比较的时间 (任意类型的字符串时间或时间戳)\",\"可选, 默认为当前时间\"]},\"26\":{\"h\":\"返回值\",\"t\":[\"两个日期相差的月数\"]},\"27\":{\"h\":\"示例代码\",\"t\":[\"/* 计算以下两个日期相差的月数 */ TimeHelper::diffMonths(1693540800, '2024-9-1 12:00:00'); // 12 \"]},\"28\":{\"h\":\"diffYears()\"},\"29\":{\"h\":\"计算两个日期相差的年数\"},\"30\":{\"h\":\"参数\",\"t\":[\"参数\",\"描述\",\"是否必须\",\"datetime\",\"要计算的时间 (任意类型的字符串时间或时间戳)\",\"必须\",\"new_datetime\",\"要比较的时间 (任意类型的字符串时间或时间戳)\",\"可选, 默认为当前时间\"]},\"31\":{\"h\":\"返回值\",\"t\":[\"两个日期相差的年数\"]},\"32\":{\"h\":\"示例代码\",\"t\":[\"/* 计算以下两个日期相差年数 */ TimeHelper::diffYears(1693540800, 1756699200); // 2 \"]},\"33\":{\"h\":\"compare()\"},\"34\":{\"h\":\"比较两个时间的大小\"},\"35\":{\"h\":\"参数\",\"t\":[\"参数\",\"描述\",\"是否必须\",\"datetime\",\"要计算的时间 (任意类型的字符串时间或时间戳)\",\"必须\",\"new_datetime\",\"要比较的时间 (任意类型的字符串时间或时间戳)\",\"可选, 默认为当前时间\"]},\"36\":{\"h\":\"返回值\",\"t\":[\"如果第一个时间大于第二个时间则返回1,小于则返回-1,相等时则返回0\"]},\"37\":{\"h\":\"示例代码\",\"t\":[\"/* 比较以下两个时间的大小 */\\nTimeHelper::compare('2023-9-1 12:00:00', '2023-8-1 12:00:00');\\n// 1\\n\\n/* 计算以下时间是否大于当前时间 */\\nTimeHelper::compare('2023-9-1 12:00:00');\\n//-1\\n\"]},\"38\":{\"h\":\"🍏 判断国内节假日\",\"t\":[\"提示\",\"专门针对国内的节假日进行判断, 目前包含2020年-2024年的节假日数据, 后续也会持续更新. 为了便于维护和使用, 另起一个类ChinaHoliday\"]},\"39\":{\"h\":\"🍍 日期转换\",\"t\":[\"提示\",\"用于爬虫爬取网页或第三方程序对接时,时间格式不统一的转换\"]},\"40\":{\"h\":\"🍉 判断时间范围\"},\"41\":{\"h\":\"isToday()\"},\"42\":{\"h\":\"判断日期是否为今天\"},\"43\":{\"h\":\"参数\",\"t\":[\"参数\",\"描述\",\"是否必须\",\"datetime\",\"任意类型的字符串时间或时间戳\",\"必须\"]},\"44\":{\"h\":\"返回值\",\"t\":[\"Bool类型的结果: true 或 false\"]},\"45\":{\"h\":\"示例代码\",\"t\":[\"/* 判断日期是否为今天 */ TimeHelper::isToday('2020-4-10 23:01:11'); // false \"]},\"46\":{\"h\":\"isThisWeek()\"},\"47\":{\"h\":\"判断日期是否为本周\"},\"48\":{\"h\":\"参数\",\"t\":[\"参数\",\"描述\",\"是否必须\",\"datetime\",\"任意类型的字符串时间或时间戳\",\"必须\"]},\"49\":{\"h\":\"返回值\",\"t\":[\"Bool类型的结果: true 或 false\"]},\"50\":{\"h\":\"示例代码\",\"t\":[\"/* 判断日期是否为本周 */ TimeHelper::isThisWeek('2020-5-1'); // false \"]},\"51\":{\"h\":\"isThisMonth()\"},\"52\":{\"h\":\"判断日期是否为本月\"},\"53\":{\"h\":\"参数\",\"t\":[\"参数\",\"描述\",\"是否必须\",\"datetime\",\"任意类型的字符串时间或时间戳\",\"必须\"]},\"54\":{\"h\":\"返回值\",\"t\":[\"Bool类型的结果: true 或 false\"]},\"55\":{\"h\":\"示例代码\",\"t\":[\"/* 判断日期是否为本月 */ TimeHelper::isThisMonth(1586451741); // false \"]},\"56\":{\"h\":\"isThisYear()\"},\"57\":{\"h\":\"判断日期是否为今年\"},\"58\":{\"h\":\"参数\",\"t\":[\"参数\",\"描述\",\"是否必须\",\"datetime\",\"任意类型的字符串时间或时间戳\",\"必须\"]},\"59\":{\"h\":\"返回值\",\"t\":[\"Bool类型的结果: true 或 false\"]},\"60\":{\"h\":\"示例代码\",\"t\":[\"/* 判断日期是否为今年 */ TimeHelper::isThisYear('Apr 11, 2023'); // true \"]},\"61\":{\"h\":\"getWeekDay()\"},\"62\":{\"h\":\"判断日期是星期几\"},\"63\":{\"h\":\"参数\",\"t\":[\"参数\",\"描述\",\"是否必须\",\"datetime\",\"任意类型的字符串时间或时间戳\",\"可选, 默认值为当前日期\"]},\"64\":{\"h\":\"返回值\",\"t\":[\"返回值为1-7, 1为星期一... 7为星期日\"]},\"65\":{\"h\":\"示例代码\",\"t\":[\"/* 判断指定时间是星期几 */ TimeHelper::getWeekDay('2023-10-01 12:31:01'); // 7 /* 判断今天是星期几 */ TimeHelper::getWeekDay(); // 3 \"]},\"66\":{\"h\":\"isWeekday()\"},\"67\":{\"h\":\"判断日期是否为平常日\"},\"68\":{\"h\":\"参数\",\"t\":[\"参数\",\"描述\",\"是否必须\",\"datetime\",\"任意类型的字符串时间或时间戳\",\"可选, 默认值为当前日期\"]},\"69\":{\"h\":\"返回值\",\"t\":[\"Bool类型的结果: 周一到周五返回true, 周六日返回false\"]},\"70\":{\"h\":\"示例代码\",\"t\":[\"/* 判断指定时间是否为平常日 */ TimeHelper::isWeekday('Mar 8, 2023'); // true \"]},\"71\":{\"h\":\"isWeekend()\"},\"72\":{\"h\":\"判断日期是否为周末\"},\"73\":{\"h\":\"参数\",\"t\":[\"参数\",\"描述\",\"是否必须\",\"datetime\",\"任意类型的字符串时间或时间戳\",\"可选, 默认值为当前日期\"]},\"74\":{\"h\":\"返回值\",\"t\":[\"Bool类型的结果: 周六日返回true, 周一到周五返回false\"]},\"75\":{\"h\":\"示例代码\",\"t\":[\"/* 判断指定时间是否为周末 */\\nTimeHelper::isWeekend(1698516612);\\n// true\\n\"]},\"76\":{\"h\":\"🍈 友好的日期格式\",\"t\":[\"提示\",\"一般用于社交类平台,评论,论坛等\"]},\"77\":{\"h\":\"toFriendly()\"},\"78\":{\"h\":\"返回友好的日期格式,如N秒前\"},\"79\":{\"h\":\"参数\",\"t\":[\"参数\",\"描述\",\"是否必须\",\"time\",\"任意类型的字符串时间或时间戳\",\"必须\",\"lang\",\"语言: 中文是zh, 英文是en\",\"可选, 默认值为zh\"]},\"80\":{\"h\":\"返回值\",\"t\":[\"友好的日期格式\"]},\"81\":{\"h\":\"示例代码\",\"t\":[\"/* 转换为友好的日期格式 */\\nTimeHelper::toFriendly('2022-3-2 10:15:33');\\n// 3天前\\n\\n/* 转换为友好的日期格式(英文) */\\nTimeHelper::toFriendly(1646186290, 'en');\\n// 6 hours ago\\n\"]},\"82\":{\"h\":\"🍇 获取需要的秒数\",\"t\":[\"提示\",\"一般用于设置缓存时间,设置结束时间等\"]},\"83\":{\"h\":\"secondEndToday()\"},\"84\":{\"h\":\"获取到今天晚上零点之前的秒数\"},\"85\":{\"h\":\"参数\",\"t\":[\"无\"]},\"86\":{\"h\":\"返回值\",\"t\":[\"从此刻到今天晚上0点的秒数\"]},\"87\":{\"h\":\"示例代码\",\"t\":[\"/* 获取到今天晚上零点之前的秒数 */ TimeHelper::secondEndToday(); // 32811 \"]},\"88\":{\"h\":\"secondMinute()\"},\"89\":{\"h\":\"获取N分钟的秒数\",\"t\":[\"参数\",\"参数\",\"描述\",\"是否必须\",\"minutes\",\"要返回多少分钟的秒数\",\"可选, 默认值为1\"]},\"90\":{\"h\":\"返回值\",\"t\":[\"N分钟的秒数\"]},\"91\":{\"h\":\"示例代码\",\"t\":[\"/* 获取5分钟的秒数 */ TimeHelper::secondMinute(5); // 300 \"]},\"92\":{\"h\":\"secondHour()\"},\"93\":{\"h\":\"获取N小时的秒数\"},\"94\":{\"h\":\"参数\",\"t\":[\"参数\",\"描述\",\"是否必须\",\"hours\",\"要返回多少小时的秒数\",\"可选, 默认值为1\"]},\"95\":{\"h\":\"返回值\",\"t\":[\"N小时的秒数\"]},\"96\":{\"h\":\"示例代码\",\"t\":[\"/* 获取10小时的秒数 */ TimeHelper::secondHour(10); // 36000 \"]},\"97\":{\"h\":\"secondDay()\"},\"98\":{\"h\":\"获取N天的秒数\"},\"99\":{\"h\":\"参数\",\"t\":[\"参数\",\"描述\",\"是否必须\",\"days\",\"要返回多少天的秒数\",\"可选, 默认值为1\"]},\"100\":{\"h\":\"返回值\",\"t\":[\"N天的秒数\"]},\"101\":{\"h\":\"示例代码\",\"t\":[\"/* 获取1天的秒数 */ TimeHelper::secondDay(); // 86400 \"]},\"102\":{\"h\":\"secondWeek()\"},\"103\":{\"h\":\"获取N周的秒数\"},\"104\":{\"h\":\"参数\",\"t\":[\"参数\",\"描述\",\"是否必须\",\"weeks\",\"要返回多少周的秒数\",\"可选, 默认值为1\"]},\"105\":{\"h\":\"返回值\",\"t\":[\"N周的秒数\"]},\"106\":{\"h\":\"示例代码\",\"t\":[\"/* 获取1周的秒数 */\\nTimeHelper::secondWeek(1);\\n// 604800\\n\"]},\"107\":{\"h\":\"🍌 获取高精度时间戳\",\"t\":[\"提示\",\"生成订单号或者与其他编程语言对接时可能会用到\"]},\"108\":{\"h\":\"🥭 平闰年相关\",\"t\":[\"提示\",\"比原生方法使用起来更方便\"]},\"109\":{\"h\":\"🍋 获取前后时间戳\"},\"110\":{\"h\":\"🍎 时区相关\",\"t\":[\"提示\",\"主要提供获取不同时区的时间和转换不同时区的时间的方法\"]},\"111\":{\"h\":\"Getting Started\"},\"112\":{\"h\":\"Usage\"},\"113\":{\"h\":\"Getting Started\"},\"114\":{\"h\":\"Usage\"}},\"dirtCount\":0,\"index\":[[\"usage\",{\"0\":{\"112\":1,\"114\":1}}],[\"update\",{\"1\":{\"2\":1,\"6\":1}}],[\"started\",{\"0\":{\"111\":1,\"113\":1}}],[\"secondweek\",{\"0\":{\"102\":1},\"1\":{\"106\":1}}],[\"secondday\",{\"0\":{\"97\":1},\"1\":{\"101\":1}}],[\"secondhour\",{\"0\":{\"92\":1},\"1\":{\"96\":1}}],[\"secondminute\",{\"0\":{\"88\":1},\"1\":{\"91\":1}}],[\"secondendtoday\",{\"0\":{\"83\":1},\"1\":{\"87\":1}}],[\"sep\",{\"1\":{\"22\":1}}],[\"getting\",{\"0\":{\"111\":1,\"113\":1}}],[\"getweekday\",{\"0\":{\"61\":1},\"1\":{\"65\":2}}],[\"时区相关\",{\"0\":{\"110\":1}}],[\"时间格式不统一的转换\",{\"1\":{\"39\":1}}],[\"时间日期的操作\",{\"1\":{\"11\":1}}],[\"平闰年相关\",{\"0\":{\"108\":1}}],[\"🥭\",{\"0\":{\"108\":1}}],[\"生成订单号或者与其他编程语言对接时可能会用到\",{\"1\":{\"107\":1}}],[\"weeks\",{\"1\":{\"104\":1}}],[\"n周的秒数\",{\"1\":{\"105\":1}}],[\"n天的秒数\",{\"1\":{\"100\":1}}],[\"n小时的秒数\",{\"1\":{\"95\":1}}],[\"n分钟的秒数\",{\"1\":{\"90\":1}}],[\"new\",{\"1\":{\"15\":1,\"20\":1,\"25\":1,\"30\":1,\"35\":1}}],[\"minutes\",{\"1\":{\"89\":1}}],[\"mar\",{\"1\":{\"70\":1}}],[\"从此刻到今天晚上0点的秒数\",{\"1\":{\"86\":1}}],[\"无\",{\"1\":{\"85\":1}}],[\"设置结束时间等\",{\"1\":{\"82\":1}}],[\"一般用于设置缓存时间\",{\"1\":{\"82\":1}}],[\"一般用于社交类平台\",{\"1\":{\"76\":1}}],[\"获取前后时间戳\",{\"0\":{\"109\":1}}],[\"获取高精度时间戳\",{\"0\":{\"107\":1}}],[\"获取1周的秒数\",{\"1\":{\"106\":1}}],[\"获取1天的秒数\",{\"1\":{\"101\":1}}],[\"获取10小时的秒数\",{\"1\":{\"96\":1}}],[\"获取n周的秒数\",{\"0\":{\"103\":1}}],[\"获取n天的秒数\",{\"0\":{\"98\":1}}],[\"获取n小时的秒数\",{\"0\":{\"93\":1}}],[\"获取n分钟的秒数\",{\"0\":{\"89\":1}}],[\"获取5分钟的秒数\",{\"1\":{\"91\":1}}],[\"获取到今天晚上零点之前的秒数\",{\"0\":{\"84\":1},\"1\":{\"87\":1}}],[\"获取需要的秒数\",{\"0\":{\"82\":1}}],[\"获取友好的时间格式\",{\"1\":{\"8\":1}}],[\"ago\",{\"1\":{\"81\":1}}],[\"apr\",{\"1\":{\"60\":1}}],[\"hours\",{\"1\":{\"81\":1,\"94\":1}}],[\"helper\",{\"1\":{\"1\":1,\"5\":1}}],[\"604800\",{\"1\":{\"106\":1}}],[\"6\",{\"1\":{\"81\":1}}],[\"en\",{\"1\":{\"81\":1}}],[\"英文\",{\"1\":{\"81\":1}}],[\"英文是en\",{\"1\":{\"79\":1}}],[\"转换为友好的日期格式\",{\"1\":{\"81\":2}}],[\"中文是zh\",{\"1\":{\"79\":1}}],[\"语言\",{\"1\":{\"79\":1}}],[\"lang\",{\"1\":{\"79\":1}}],[\"如n秒前\",{\"0\":{\"78\":1}}],[\"如果第一个时间大于第二个时间则返回1\",{\"1\":{\"36\":1}}],[\"论坛等\",{\"1\":{\"76\":1}}],[\"评论\",{\"1\":{\"76\":1}}],[\"友好的日期格式\",{\"0\":{\"76\":1},\"1\":{\"80\":1}}],[\"周一到周五返回false\",{\"1\":{\"74\":1}}],[\"周一到周五返回true\",{\"1\":{\"69\":1}}],[\"周六日返回true\",{\"1\":{\"74\":1}}],[\"周六日返回false\",{\"1\":{\"69\":1}}],[\"isweekend\",{\"0\":{\"71\":1},\"1\":{\"75\":1}}],[\"isweekday\",{\"0\":{\"66\":1},\"1\":{\"70\":1}}],[\"isthisyear\",{\"0\":{\"56\":1},\"1\":{\"60\":1}}],[\"isthismonth\",{\"0\":{\"51\":1},\"1\":{\"55\":1}}],[\"isthisweek\",{\"0\":{\"46\":1},\"1\":{\"50\":1}}],[\"istoday\",{\"0\":{\"41\":1},\"1\":{\"45\":1}}],[\"默认值为1\",{\"1\":{\"89\":1,\"94\":1,\"99\":1,\"104\":1}}],[\"默认值为zh\",{\"1\":{\"79\":1}}],[\"默认值为当前日期\",{\"1\":{\"63\":1,\"68\":1,\"73\":1}}],[\"默认为当前时间\",{\"1\":{\"15\":1,\"20\":1,\"25\":1,\"30\":1,\"35\":1}}],[\"5\",{\"1\":{\"50\":1,\"91\":1}}],[\"01\",{\"1\":{\"45\":1,\"65\":2}}],[\"00\",{\"1\":{\"17\":6,\"22\":2,\"27\":2,\"37\":6}}],[\"4\",{\"1\":{\"45\":1}}],[\"false\",{\"1\":{\"44\":1,\"45\":1,\"49\":1,\"50\":1,\"54\":1,\"55\":1,\"59\":1}}],[\"或\",{\"1\":{\"44\":1,\"49\":1,\"54\":1,\"59\":1}}],[\"tofriendly\",{\"0\":{\"77\":1},\"1\":{\"81\":2}}],[\"true\",{\"1\":{\"44\":1,\"49\":1,\"54\":1,\"59\":1,\"60\":1,\"70\":1,\"75\":1}}],[\"timehelper\",{\"1\":{\"8\":1,\"17\":2,\"22\":1,\"27\":1,\"32\":1,\"37\":2,\"45\":1,\"50\":1,\"55\":1,\"60\":1,\"65\":2,\"70\":1,\"75\":1,\"81\":2,\"87\":1,\"91\":1,\"96\":1,\"101\":1,\"106\":1}}],[\"time\",{\"1\":{\"1\":1,\"5\":1,\"79\":1}}],[\"bool类型的结果\",{\"1\":{\"44\":1,\"49\":1,\"54\":1,\"59\":1,\"69\":1,\"74\":1}}],[\"用于爬虫爬取网页或第三方程序对接时\",{\"1\":{\"39\":1}}],[\"日期转换\",{\"0\":{\"39\":1}}],[\"另起一个类chinaholiday\",{\"1\":{\"38\":1}}],[\"为了便于维护和使用\",{\"1\":{\"38\":1}}],[\"为什么不是\",{\"0\":{\"10\":1}}],[\"后续也会持续更新\",{\"1\":{\"38\":1}}],[\"后来做成composer包分享给朋友们以后\",{\"1\":{\"11\":1}}],[\"目前包含2020年\",{\"1\":{\"38\":1}}],[\"专门针对国内的节假日进行判断\",{\"1\":{\"38\":1}}],[\"判断指定时间是否为周末\",{\"1\":{\"75\":1}}],[\"判断指定时间是否为平常日\",{\"1\":{\"70\":1}}],[\"判断指定时间是星期几\",{\"1\":{\"65\":1}}],[\"判断今天是星期几\",{\"1\":{\"65\":1}}],[\"判断日期是星期几\",{\"0\":{\"62\":1}}],[\"判断日期是否为周末\",{\"0\":{\"72\":1}}],[\"判断日期是否为平常日\",{\"0\":{\"67\":1}}],[\"判断日期是否为今年\",{\"0\":{\"57\":1},\"1\":{\"60\":1}}],[\"判断日期是否为今天\",{\"0\":{\"42\":1},\"1\":{\"45\":1}}],[\"判断日期是否为本月\",{\"0\":{\"52\":1},\"1\":{\"55\":1}}],[\"判断日期是否为本周\",{\"0\":{\"47\":1},\"1\":{\"50\":1}}],[\"判断国内节假日\",{\"0\":{\"38\":1}}],[\"判断时间范围\",{\"0\":{\"40\":1},\"1\":{\"8\":1}}],[\"🍎\",{\"0\":{\"110\":1}}],[\"🍋\",{\"0\":{\"109\":1}}],[\"🍌\",{\"0\":{\"107\":1}}],[\"🍇\",{\"0\":{\"82\":1}}],[\"🍈\",{\"0\":{\"76\":1}}],[\"🍉\",{\"0\":{\"40\":1}}],[\"🍍\",{\"0\":{\"39\":1}}],[\"🍏\",{\"0\":{\"38\":1}}],[\"🍊\",{\"0\":{\"12\":1}}],[\"相等时则返回0\",{\"1\":{\"36\":1}}],[\"相关信息\",{\"1\":{\"1\":1}}],[\"小于则返回\",{\"1\":{\"36\":1}}],[\"比原生方法使用起来更方便\",{\"1\":{\"108\":1}}],[\"比较以下两个时间的大小\",{\"1\":{\"37\":1}}],[\"比较两个时间的大小\",{\"0\":{\"34\":1}}],[\"比如获取指定时间的秒数\",{\"1\":{\"8\":1}}],[\"23\",{\"1\":{\"45\":1}}],[\"2\",{\"1\":{\"32\":1,\"81\":1}}],[\"2022\",{\"1\":{\"81\":1}}],[\"2020\",{\"1\":{\"45\":1,\"50\":1}}],[\"2024年的节假日数据\",{\"1\":{\"38\":1}}],[\"2024\",{\"1\":{\"17\":1,\"27\":1}}],[\"2023\",{\"1\":{\"17\":2,\"22\":2,\"37\":3,\"60\":1,\"65\":1,\"70\":1}}],[\"86400\",{\"1\":{\"101\":1}}],[\"8\",{\"1\":{\"22\":1,\"37\":1,\"70\":1}}],[\"两个日期相差的年数\",{\"1\":{\"31\":1}}],[\"两个日期相差的月数\",{\"1\":{\"26\":1}}],[\"两个日期相差的周数\",{\"1\":{\"21\":1}}],[\"两个日期相差的天数\",{\"1\":{\"16\":1}}],[\"36000\",{\"1\":{\"96\":1}}],[\"366\",{\"1\":{\"17\":1}}],[\"32811\",{\"1\":{\"87\":1}}],[\"3天前\",{\"1\":{\"81\":1}}],[\"33\",{\"1\":{\"81\":1}}],[\"3\",{\"1\":{\"65\":1,\"81\":1}}],[\"31\",{\"1\":{\"65\":1}}],[\"300\",{\"1\":{\"91\":1}}],[\"30\",{\"1\":{\"17\":1}}],[\"9\",{\"1\":{\"17\":3,\"22\":1,\"27\":1,\"37\":2}}],[\"示例代码\",{\"0\":{\"17\":1,\"22\":1,\"27\":1,\"32\":1,\"37\":1,\"45\":1,\"50\":1,\"55\":1,\"60\":1,\"65\":1,\"70\":1,\"75\":1,\"81\":1,\"87\":1,\"91\":1,\"96\":1,\"101\":1,\"106\":1}}],[\"返回友好的日期格式\",{\"0\":{\"78\":1}}],[\"返回值为1\",{\"1\":{\"64\":1}}],[\"返回值\",{\"0\":{\"16\":1,\"21\":1,\"26\":1,\"31\":1,\"36\":1,\"44\":1,\"49\":1,\"54\":1,\"59\":1,\"64\":1,\"69\":1,\"74\":1,\"80\":1,\"86\":1,\"90\":1,\"95\":1,\"100\":1,\"105\":1}}],[\"返回n小时\",{\"1\":{\"8\":1}}],[\"可选\",{\"1\":{\"15\":1,\"20\":1,\"25\":1,\"30\":1,\"35\":1,\"63\":1,\"68\":1,\"73\":1,\"79\":1,\"89\":1,\"94\":1,\"99\":1,\"104\":1}}],[\"可以快速实现常用的时间日期操作\",{\"1\":{\"8\":1}}],[\"要返回多少周的秒数\",{\"1\":{\"104\":1}}],[\"要返回多少天的秒数\",{\"1\":{\"99\":1}}],[\"要返回多少小时的秒数\",{\"1\":{\"94\":1}}],[\"要返回多少分钟的秒数\",{\"1\":{\"89\":1}}],[\"要比较的时间\",{\"1\":{\"15\":1,\"20\":1,\"25\":1,\"30\":1,\"35\":1}}],[\"要计算的时间\",{\"1\":{\"15\":1,\"20\":1,\"25\":1,\"30\":1,\"35\":1}}],[\"必须\",{\"1\":{\"15\":1,\"20\":1,\"25\":1,\"30\":1,\"35\":1,\"43\":1,\"48\":1,\"53\":1,\"58\":1,\"79\":1}}],[\"任意类型的字符串时间或时间戳\",{\"1\":{\"15\":2,\"20\":2,\"25\":2,\"30\":2,\"35\":2,\"43\":1,\"48\":1,\"53\":1,\"58\":1,\"63\":1,\"68\":1,\"73\":1,\"79\":1}}],[\"days\",{\"1\":{\"99\":1}}],[\"datetime\",{\"1\":{\"15\":2,\"20\":2,\"25\":2,\"30\":2,\"35\":2,\"43\":1,\"48\":1,\"53\":1,\"58\":1,\"63\":1,\"68\":1,\"73\":1}}],[\"diffyears\",{\"0\":{\"28\":1},\"1\":{\"32\":1}}],[\"diffmonths\",{\"0\":{\"23\":1},\"1\":{\"27\":1}}],[\"diffweeks\",{\"0\":{\"18\":1},\"1\":{\"22\":1}}],[\"diffdays\",{\"0\":{\"13\":1},\"1\":{\"17\":2}}],[\"描述\",{\"1\":{\"15\":1,\"20\":1,\"25\":1,\"30\":1,\"35\":1,\"43\":1,\"48\":1,\"53\":1,\"58\":1,\"63\":1,\"68\":1,\"73\":1,\"79\":1,\"89\":1,\"94\":1,\"99\":1,\"104\":1}}],[\"参数\",{\"0\":{\"15\":1,\"20\":1,\"25\":1,\"30\":1,\"35\":1,\"43\":1,\"48\":1,\"53\":1,\"58\":1,\"63\":1,\"68\":1,\"73\":1,\"79\":1,\"85\":1,\"94\":1,\"99\":1,\"104\":1},\"1\":{\"15\":1,\"20\":1,\"25\":1,\"30\":1,\"35\":1,\"43\":1,\"48\":1,\"53\":1,\"58\":1,\"63\":1,\"68\":1,\"73\":1,\"79\":1,\"89\":2,\"94\":1,\"99\":1,\"104\":1}}],[\"计算以下时间是否大于当前时间\",{\"1\":{\"37\":1}}],[\"计算以下时间与当前时间相差的天数\",{\"1\":{\"17\":1}}],[\"计算以下两个日期相差年数\",{\"1\":{\"32\":1}}],[\"计算以下两个日期相差的月数\",{\"1\":{\"27\":1}}],[\"计算以下两个日期相差的周数\",{\"1\":{\"22\":1}}],[\"计算以下两个日期相差的天数\",{\"1\":{\"17\":1}}],[\"计算两个日期相差的年数\",{\"0\":{\"29\":1}}],[\"计算两个日期相差的月数\",{\"0\":{\"24\":1}}],[\"计算两个日期相差的周数\",{\"0\":{\"19\":1}}],[\"计算两个日期相差的天数\",{\"0\":{\"14\":1}}],[\"计算两个时间相差值\",{\"1\":{\"8\":1}}],[\"计算相差值\",{\"0\":{\"12\":1}}],[\"希望让更多的程序yuan不需要重复造轮子\",{\"1\":{\"11\":1}}],[\"所以决定把文档完善起来\",{\"1\":{\"11\":1}}],[\"所有操作只需要一个静态方法即可完成\",{\"1\":{\"9\":1}}],[\"所有方法都可以传入任意类型的时间日期格式或时间戳\",{\"1\":{\"9\":1}}],[\"反响还不错\",{\"1\":{\"11\":1}}],[\"刚开始只是自己使用\",{\"1\":{\"11\":1}}],[\"开源初衷是什么\",{\"0\":{\"11\":1}}],[\"开箱即用\",{\"1\":{\"9\":1}}],[\"不喜勿喷\",{\"1\":{\"10\":1}}],[\"不依赖任何扩展\",{\"1\":{\"9\":1}}],[\"个人观点\",{\"1\":{\"10\":1}}],[\"因此timehelper出现了\",{\"1\":{\"10\":1}}],[\"因为它是一个标准的\",{\"1\":{\"1\":1,\"5\":1}}],[\"但是我觉得还是不够简洁\",{\"1\":{\"10\":1}}],[\"是否必须\",{\"1\":{\"15\":1,\"20\":1,\"25\":1,\"30\":1,\"35\":1,\"43\":1,\"48\":1,\"53\":1,\"58\":1,\"63\":1,\"68\":1,\"73\":1,\"79\":1,\"89\":1,\"94\":1,\"99\":1,\"104\":1}}],[\"是经常会用到的\",{\"1\":{\"11\":1}}],[\"是十分强大的\",{\"1\":{\"10\":1}}],[\"是一个简单易用的php时间日期助手类库\",{\"1\":{\"8\":1}}],[\"毫无疑问\",{\"1\":{\"10\":1}}],[\"compare\",{\"0\":{\"33\":1},\"1\":{\"37\":2}}],[\"composer\",{\"1\":{\"1\":2,\"2\":1,\"5\":2,\"6\":1}}],[\"carbon作为php时间日期助手类库\",{\"1\":{\"10\":1}}],[\"carbon\",{\"0\":{\"10\":1}}],[\"保证项目的长期稳定和持续更新\",{\"1\":{\"9\":1}}],[\"作者为自由职业者\",{\"1\":{\"9\":1}}],[\"长期维护\",{\"1\":{\"9\":1}}],[\"快捷高效\",{\"1\":{\"9\":1}}],[\"化繁为简\",{\"1\":{\"9\":1}}],[\"简单易用\",{\"1\":{\"9\":1}}],[\"简介\",{\"0\":{\"7\":1}}],[\"主要提供获取不同时区的时间和转换不同时区的时间的方法\",{\"1\":{\"110\":1}}],[\"主要特性有哪些\",{\"0\":{\"9\":1}}],[\"主页\",{\"0\":{\"0\":1}}],[\"年前或者后的时间戳等等\",{\"1\":{\"8\":1}}],[\"月\",{\"1\":{\"8\":1}}],[\"星期\",{\"1\":{\"8\":1}}],[\"天\",{\"1\":{\"8\":1}}],[\"什么是timehelper\",{\"0\":{\"8\":1}}],[\"🛎️\",{\"0\":{\"7\":1}}],[\"🚀\",{\"0\":{\"4\":1}}],[\"提示\",{\"1\":{\"4\":1,\"38\":1,\"39\":1,\"76\":1,\"82\":1,\"107\":1,\"108\":1,\"110\":1}}],[\"世界上最好的编程语言\",{\"1\":{\"3\":1}}],[\"加入qq频道\",{\"1\":{\"3\":1}}],[\"点击或扫一扫以下二维码\",{\"1\":{\"3\":1}}],[\"qq频道\",{\"0\":{\"3\":1},\"1\":{\"3\":1}}],[\"更新\",{\"0\":{\"2\":1,\"6\":1}}],[\"zjkal\",{\"1\":{\"1\":1,\"5\":1}}],[\"require\",{\"1\":{\"1\":1,\"5\":1}}],[\"直接使用以下命令安装\",{\"1\":{\"1\":1,\"5\":1}}],[\"包\",{\"1\":{\"1\":1,\"5\":1}}],[\"1646186290\",{\"1\":{\"81\":1}}],[\"1698516612\",{\"1\":{\"75\":1}}],[\"1693540800\",{\"1\":{\"27\":1,\"32\":1}}],[\"15\",{\"1\":{\"81\":1}}],[\"1586451741\",{\"1\":{\"55\":1}}],[\"1为星期一\",{\"1\":{\"64\":1}}],[\"11\",{\"1\":{\"45\":1,\"60\":1}}],[\"10\",{\"1\":{\"45\":1,\"65\":1,\"81\":1,\"96\":1}}],[\"1756699200\",{\"1\":{\"32\":1}}],[\"12\",{\"1\":{\"17\":3,\"22\":1,\"27\":2,\"37\":3,\"65\":1}}],[\"1\",{\"1\":{\"1\":1,\"4\":1,\"17\":3,\"22\":2,\"27\":1,\"36\":1,\"37\":5,\"50\":1,\"106\":1}}],[\"7为星期日\",{\"1\":{\"64\":1}}],[\"7\",{\"1\":{\"1\":1,\"4\":1,\"64\":1,\"65\":1}}],[\">=\",{\"1\":{\"1\":1,\"4\":1}}],[\"php\",{\"1\":{\"1\":1,\"4\":1}}],[\"版本要求\",{\"1\":{\"1\":1,\"4\":1}}],[\"安装非常简单\",{\"1\":{\"1\":1,\"5\":1}}],[\"安装\",{\"0\":{\"1\":1,\"4\":1,\"5\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n}})=>{e==="suggest"?self.postMessage(st(t,v[s],n)):e==="search"?self.postMessage(et(t,v[s],n)):self.postMessage({suggestions:st(t,v[s],n),results:et(t,v[s],n)})};
//# sourceMappingURL=index.js.map
