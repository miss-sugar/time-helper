import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as e,c as a,f as n}from"./app-s_FqwuY2.js";const s={},r=n(`<h1 id="üçç-conversion" tabindex="-1"><a class="header-anchor" href="#üçç-conversion" aria-hidden="true">#</a> üçç Conversion</h1><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>It is used to convert crawlers crawling web pages or third-party programs to connect with different time formats</p></div><h2 id="format" tabindex="-1"><a class="header-anchor" href="#format" aria-hidden="true">#</a> format()</h2><h3 id="convert-any-format-time-to-the-specified-format" tabindex="-1"><a class="header-anchor" href="#convert-any-format-time-to-the-specified-format" aria-hidden="true">#</a> Convert any format time to the specified format</h3><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:center;">Parameter</th><th style="text-align:center;">Introduction</th><th style="text-align:center;">Require</th></tr></thead><tbody><tr><td style="text-align:center;">format</td><td style="text-align:center;">The date format is the same as that of the system function date().</td><td style="text-align:center;">Optional, default is Y-m-d H:i:s</td></tr><tr><td style="text-align:center;">datetime</td><td style="text-align:center;">Any type of string time or timestamp</td><td style="text-align:center;">Optional, defaults to the current time</td></tr></tbody></table><h4 id="return-values" tabindex="-1"><a class="header-anchor" href="#return-values" aria-hidden="true">#</a> Return Values</h4><blockquote><p>Specifies the format of the time string</p></blockquote><h4 id="example-code" tabindex="-1"><a class="header-anchor" href="#example-code" aria-hidden="true">#</a> Example code</h4><div class="language-php" data-ext="php"><pre class="language-php"><code><span class="token comment">/* Convert the following dates to a date format commonly used in China */</span>
<span class="token class-name static-context">TimeHelper</span><span class="token operator">::</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Y-m-d H:i:s&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;May 3, 2022 12:01:33&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 2022-03-03 12:01:33</span>

<span class="token comment">/* Convert timestamps to date formats commonly used in the West */</span>
<span class="token class-name static-context">TimeHelper</span><span class="token operator">::</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;F j, Y, g:i a&#39;</span><span class="token punctuation">,</span><span class="token number">1698762509</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// October 31, 2023, 10:28 pm</span>
</code></pre></div><h2 id="istimestamp" tabindex="-1"><a class="header-anchor" href="#istimestamp" aria-hidden="true">#</a> isTimestamp()</h2><h3 id="determines-whether-a-string-or-number-is-a-timestamp" tabindex="-1"><a class="header-anchor" href="#determines-whether-a-string-or-number-is-a-timestamp" aria-hidden="true">#</a> Determines whether a string or number is a timestamp</h3><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:center;">Parameter</th><th style="text-align:center;">Introduction</th><th style="text-align:center;">Require</th></tr></thead><tbody><tr><td style="text-align:center;">timestamp</td><td style="text-align:center;">The string or number to be judged</td><td style="text-align:center;">required</td></tr></tbody></table><h4 id="return-values-1" tabindex="-1"><a class="header-anchor" href="#return-values-1" aria-hidden="true">#</a> Return Values</h4><blockquote><p>&#39;true&#39; if it&#39;s a timestamp, &#39;false&#39; if it&#39;s otherwise</p></blockquote><h4 id="example-code-1" tabindex="-1"><a class="header-anchor" href="#example-code-1" aria-hidden="true">#</a> Example code</h4><div class="language-php" data-ext="php"><pre class="language-php"><code><span class="token comment">/* Check whether the following strings are timestamps */</span>
<span class="token class-name static-context">TimeHelper</span><span class="token operator">::</span><span class="token function">isTimestamp</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;1646360133&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// true</span>

<span class="token comment">/* Determine whether the following numbers are timestamps */</span>
<span class="token class-name static-context">TimeHelper</span><span class="token operator">::</span><span class="token function">isTimestamp</span><span class="token punctuation">(</span><span class="token number">164636013</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// false</span>
</code></pre></div><h2 id="totimestamp" tabindex="-1"><a class="header-anchor" href="#totimestamp" aria-hidden="true">#</a> toTimestamp()</h2><h3 id="arbitrary-format-time-is-converted-to-a-timestamp" tabindex="-1"><a class="header-anchor" href="#arbitrary-format-time-is-converted-to-a-timestamp" aria-hidden="true">#</a> Arbitrary format time is converted to a timestamp</h3><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:center;">Parameter</th><th style="text-align:center;">Introduction</th><th style="text-align:center;">Require</th></tr></thead><tbody><tr><td style="text-align:center;">datetime</td><td style="text-align:center;">Any type of string time or timestamp</td><td style="text-align:center;">Optional, defaults to the current time</td></tr></tbody></table><h4 id="return-values-2" tabindex="-1"><a class="header-anchor" href="#return-values-2" aria-hidden="true">#</a> Return Values</h4><blockquote><p>The timestamp after the conversion</p></blockquote><h4 id="example-code-2" tabindex="-1"><a class="header-anchor" href="#example-code-2" aria-hidden="true">#</a> Example code</h4><div class="language-php" data-ext="php"><pre class="language-php"><code><span class="token comment">/* Convert the following dates to timestamps */</span>
<span class="token class-name static-context">TimeHelper</span><span class="token operator">::</span><span class="token function">toTimestamp</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Apr 11, 2020&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 1586534400</span>

<span class="token comment">/* Convert irregular dates to timestamps */</span>
<span class="token class-name static-context">TimeHelper</span><span class="token operator">::</span><span class="token function">toTimestamp</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;2023Âπ¥9Êúà 5ÁÇπ&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 1693515600</span>
</code></pre></div>`,26),o=[r];function i(c,p){return e(),a("div",null,o)}const m=t(s,[["render",i],["__file","conversion.html.vue"]]);export{m as default};
