import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as t,c as a,f as i}from"./app-e05415a1.js";const o={},n=i('<h1 id="üõéÔ∏è-introduction" tabindex="-1"><a class="header-anchor" href="#üõéÔ∏è-introduction" aria-hidden="true">#</a> üõéÔ∏è Introduction</h1><h2 id="what-is-timehelper" tabindex="-1"><a class="header-anchor" href="#what-is-timehelper" aria-hidden="true">#</a> What is TimeHelper?</h2><p><code>TimeHelper</code> is a simple and user-friendly <code>PHP Date and Time Helper Library</code> that enables quick implementation of common date and time operations. It includes functionalities such as getting the number of seconds from a specified time, obtaining a user-friendly time format, checking time ranges, calculating the difference between two times, and providing timestamps for N hours/days/weeks/months/years ago or in the future, among other features.</p><h2 id="what-are-the-main-features" tabindex="-1"><a class="header-anchor" href="#what-are-the-main-features" aria-hidden="true">#</a> What are the main features?</h2><ul><li>Light: It does not rely on any extensions and is ready to use out of the box</li><li>Easy: All methods can accept either arbitrary date and time formats or timestamps</li><li>Smart: All operations can be accomplished with just one static method for each</li><li>Long-term: The author is a freelancer committed to ensuring the project&#39;s long-term.</li></ul><h2 id="why-not-carbon" tabindex="-1"><a class="header-anchor" href="#why-not-carbon" aria-hidden="true">#</a> Why not <code>Carbon</code>?</h2><p>There is no doubt that carbon, as a PHP time and date assistant class library, is very powerful, but I think it is still not simple enough. So TimeHelper appeared. Personal opinion, don‚Äôt comment if you don‚Äôt like it.</p><h2 id="what-is-the-original-intention-of-open-source" tabindex="-1"><a class="header-anchor" href="#what-is-the-original-intention-of-open-source" aria-hidden="true">#</a> What is the original intention of open source?</h2><p>Time and date operations are often used. At first, I just used it myself. Later, I made it into a Composer package and shared it with my friends. The response was pretty good. So I decided to improve the documentation, hoping that more programmers would not need to reinvent the wheel.</p>',9),r=[n];function s(h,d){return t(),a("div",null,r)}const m=e(o,[["render",s],["__file","introduction.html.vue"]]);export{m as default};
