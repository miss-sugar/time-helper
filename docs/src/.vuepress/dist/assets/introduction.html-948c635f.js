import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as d,f as o}from"./app-0ab0ef13.js";const r={},c=o('<h1 id="🛎️-简介" tabindex="-1"><a class="header-anchor" href="#🛎️-简介" aria-hidden="true">#</a> 🛎️ 简介</h1><h2 id="什么是timehelper" tabindex="-1"><a class="header-anchor" href="#什么是timehelper" aria-hidden="true">#</a> 什么是TimeHelper?</h2><p><code>TimeHelper</code> 是一个简单易用的<code>PHP时间日期助手类库</code>,可以快速实现常用的时间日期操作,比如获取指定时间的秒数,获取友好的时间格式,判断时间范围,计算两个时间相差值,返回N小时/天/星期/月/年前或者后的时间戳等等。</p><h2 id="主要特性有哪些" tabindex="-1"><a class="header-anchor" href="#主要特性有哪些" aria-hidden="true">#</a> 主要特性有哪些？</h2><ul><li>简单易用: 不依赖任何扩展,<code>开箱即用</code></li><li>化繁为简: 所有方法都可以传入<code>任意类型的时间日期格式</code>或<code>时间戳</code></li><li>快捷高效: 所有操作只需要<code>一个静态方法</code>即可完成</li><li>长期维护: 作者为自由职业者,保证项目的<code>长期稳定</code>和<code>持续更新</code></li></ul><h2 id="为什么不是carbon" tabindex="-1"><a class="header-anchor" href="#为什么不是carbon" aria-hidden="true">#</a> 为什么不是<code>Carbon</code>?</h2><p>毫无疑问，carbon作为PHP时间日期助手类库，是十分强大的，但是我觉得还是不够简洁。因此TimeHelper出现了。个人观点，不喜勿喷。</p><h2 id="开源初衷是什么" tabindex="-1"><a class="header-anchor" href="#开源初衷是什么" aria-hidden="true">#</a> 开源初衷是什么？</h2><p>时间日期的操作，是经常会用到的。刚开始只是自己使用，后来做成Composer包分享给朋友们以后，反响还不错。所以决定把文档完善起来，希望让更多的程序Yuan不需要重复造轮子。</p>',9),i=[c];function h(n,t){return a(),d("div",null,i)}const p=e(r,[["render",h],["__file","introduction.html.vue"]]);export{p as default};
